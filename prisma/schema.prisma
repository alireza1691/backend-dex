generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  User
}

model Avatars {
  id        String @id @default(uuid()) @map("_id")
  public_id String
  url       String
  user      User   @relation(fields: [userId], references: [id])
  userId    String @unique
}

model User {
  id           String   @id @default(uuid()) @map("_id")
  name         String
  email        String   @unique
  phone_number Float    @unique
  address      String?
  password     String
  avatar       Avatars?
  role         Role     @default(User)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model NonVerifiedUser {
  name         String
  lastName     String
  password     String
  phone_number Float    @unique
  email        String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model InteractedUser {
  id           Int      @id @default(autoincrement())
  phone_number Float    @unique
  createdAt    DateTime @default(now())
}

model Account {
  id           Int           @id @default(autoincrement())
  name         String
  lastName     String
  password     String
  phone_number Float         @unique
  email        String?
  verification Verification?
}

model Verification {
  id          Int      @id @default(autoincrement())
  personalId  String   @unique
  bankAccount String[] @unique
  user        Account  @relation(fields: [userId], references: [id])
  userId      Int      @unique
  userLevel   Int
}

model PendingVerification {
  id           Int      @id @default(autoincrement())
  personalId   String   @unique
  bankAccount  String[] @unique
  phone_number Float    @unique
}

model PendingNewBankAccountRequest {
  id             Int    @id @default(autoincrement())
  personalId     String @unique
  newBankAccount String @unique
}
